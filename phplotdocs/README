This is phplotdocs/README, for the PHPlot Reference Manual source
Last updated on 2010-07-09
-----------------------------------------------------------------------------

This directory contains the Docbook-XML source files for the PHPlot Reference
Manual. That is, it contains the files you need to build the manual.  You
also need the appropriate tools.  This manual is written with Docbook,
using the XSL style sheets, so you need the Docbook XSL style sheets
and associated tools.

List of files:

  Makefile            Makefile for building the manual
  README              This file
  ChangeLog           Record of changes to the manual
  etc/                Extra files, includes scripts for non-example images
  examples/           Directory of self-producing examples
  style.xsl           XSL style sheet for producing XHTML output
  images/             Image files, other than examples
  main.xml            Main source file for the manual
  *.xml               Other source files for the manual
  phplot.php          Link to the version of PHPlot used for example files
  phplotdoc.css       HTML style sheet for the manual
  variables.list      Internal class variables documentation source file
  gen.vardoc          Script to turn variables.list into Docbook-XML

Tools:

I used the following tools and versions to produce the manual. Other
versions may work too.

   Docbook XSL Style Sheets docbook-xsl-1.75.2
   xsltproc from libxsltproc-1.1.26 and libxml2-2.7.6
   Tcl shell (tclsh) is used to generate the table in the Variables chapter.

The above are used to produce the XHTML manual. No other output format is
currently available.


Makefile:

There are some configurable macros at the top of the Makefile which you may
need to change for your installation. Primarily, PHP must be set to the
path to your PHP CLI interpreter to create the examples (see below). For
example:    PHP=/opt/php/bin/php

The Makefile has the following targets:

  "make html" creates the HTML files (in the current directory).
  "make release" makes a ZIP file containing the HTML and associated files
    for the manual.
    When unzipped, it will make a directory phplotdocs/ containing all
    the files, with index.html being the starting point.
  "make install" builds (if necessary) the HTML files, and then copies them
    and the images and stylesheet to a directory named by the DESTDIR
    variable.
  "make clean" deletes some intermediate files, but leaves the manual output.
  "make allclean" deletes every generated file.
  "make sfhtml" makes a special HTML version of the manual for the
    PHPlot web site on Sourceforge.net (which requires their logo on
    each page).



Example Figure Production:

The method for producing the examples requires some explanation. The goal
is to be sure the example figures in the manual are precisely generated by
the example code shown with the figure. To this end, only the PHP scripts
which generate the example figures are provided. The PHP CLI is used to
create the images. Note that the PHP CLI never outputs HTTP headers, so
SetIsInline(True) is not needed.

The Makefile automatically makes two files from each PHP script (*.php). An
image file (*.png or *.jpg) is created using PHPlot, and a text file
(*.xml) is created by wrapping the PHP script in CDATA markers inside a
programlisting element.  The image file and the text file are included into
the manual to form the example figure and the source code which generates
it.  So you need a working installation of PHPlot, with phplot.php found on
the PHP include path, in order for this to work.

The Makefile contains a list of the examples scripts, and a list of the
image files they need to produce when run. (The Makefile used to do this
with a wildcard on examples/*.php and assumed each script made a PNG file,
but that no longer works as JPEGs are also possible.)

Note: It is important to use the right version of PHPlot to make the
examples. (Otherwise, people may try an example and it won't work.) To
ensure a known version, make a link from this directory (where Makefile is)
to the version of phplot.php which is to be used.


Style Notes:

Writing XML or SGML for Docbook can be a challenge and a chore. I've adopted a
compromise position on indenting text and markup. Generally, I indent
markup blocks by 2 spaces at each level to help show the structure of the
document. But to keep this from getting out of hand, I usually move the top
2 or 3 elements flush to the left margin. This prevents the indent from
moving too far to the right, and also I feel that extremely long indent
blocks don't really help anyone see the structure. For example, I might
write <chapter>, <sect1>, and the top-level <para>s of the section all
flush against the left margin. The other oddity of my SGML, and the one
most noticeable, is that while I indent tags, I usually don't indent text.
In my opinion, it is just not worth the difficulty typing and editing
blocks of indented text.  So you will see writing like this:
|<itemizedlist>
|  <listitem>
|    <para>
|A color name, ...
|    </para>
|  </listitem>
I'm not saying this is the best way to write XML or SGML, just trying to
explain a little about how I do it and that it isn't completely random.


XML vs SGML:

The first versions of this manual were written in DocBook SGML and
converted with DSSSL stylesheet processing tools. The current version
is XML and converted with XSLT processing tools.


HTML vs XHTML:

The selection of an XSL style sheet determines the output format: HTML or
XHTML. Because the XHTML output is more standards-compliant, XHTML was
chosen. The output should display properly in all modern browsers.


Member Variables documentation:

There is a table in the Member Variables chapter with information about
all of the PHPlot class variables. The information about the variables is
maintained in the tab-separated text file 'variables.list'. This is converted
by the Makefile into a Docbook-XML file 'variablelist.xml', which is included
into the manual. The conversion is done using a short Tcl script 'gen.vardoc',
so you will need the Tcl shell tclsh to build the manual.
